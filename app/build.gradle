apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'android-apt'
//apply plugin: 'realm-android'
//apply plugin: 'com.apollographql.android'

//apply plugin: 'com.google.gms.google-services'

//apply plugin: 'com.neenbedankt.android-apt'

//apply plugin:'com.android.databinding'
//apply plugin: 'me.tatarka.retrolambda'

apply plugin: 'com.google.ar.sceneform.plugin'


def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {

//    compileSdkVersion 27
//    buildToolsVersion "27.0.2"


    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    sourceSets {
        main.res.srcDirs += 'src/main/res_fingerprint'
        main.res.srcDirs += 'src/main/res_arcore'
        main.res.srcDirs += 'src/main/res_bluetooth'
        main.res.srcDirs += 'src/main/res_camera'
        main.res.srcDirs += 'src/main/res_douban'
        main.res.srcDirs += 'src/main/res_douyin'
        main.res.srcDirs += 'src/main/res_download'
        main.res.srcDirs += 'src/main/res_faceid'
        main.res.srcDirs += 'src/main/res_filesystem'
        main.res.srcDirs += 'src/main/res_gank'
        main.res.srcDirs += 'src/main/res_kaiyan'
        main.res.srcDirs += 'src/main/res_media'
        main.res.srcDirs += 'src/main/res_netimage'
        main.res.srcDirs += 'src/main/res_qqmusic'
        main.res.srcDirs += 'src/main/res_theme_default'
        main.res.srcDirs += 'src/main/res_trafficmonitor'
        main.res.srcDirs += 'src/main/res_zhihu'
        main.res.srcDirs += 'src/main/res_todo'
//        main.res.srcDirs += 'src/main/res-newyear'

        main.jniLibs.srcDirs = ['libs']
    }

//    E:\work\personal.jks
//    dataBinding {
//        enabled = true
//    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
//        disable 'MissingTranslation'
    }
    defaultConfig {

        multiDexEnabled true

        applicationId "edu.tjrac.swant.unicorn"
        minSdkVersion 19
        targetSdkVersion 27

        versionCode 1
        versionName "1.0"
        flavorDimensions "1.0.0"

        //只打包中文资源
//        resConfigs "zh"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }
//   ndk{
//       moduleName "JNIDemo"
//   }

//        // 配置 JSON 序列化库 for savestate
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [ serializer : "Gson" ]
//            }
//        }
    }
    productFlavors {
        dev {
            manifestPlaceholders = [channel: "dev"]
        }
        official {
            manifestPlaceholders = [channel: "official"]
        }
        // ... ...
        wandoujia {
            manifestPlaceholders = [channel: "wandoujia"]
        }
        xiaomi {
            manifestPlaceholders = [channel: "xiaomi"]
        }
//        "360" {
//            manifestPlaceholders = [channel: "360"]
//        }
    }
    signingConfigs {
        debug {
//            storeFile file(RELEASE_STORE_FILE)
//            storePassword RELEASE_STORE_PASSWORD
//            keyAlias RELEASE_KEY_ALIAS
//            keyPassword RELEASE_KEY_PASSWORD
        }
        preview {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }


    buildTypes {
        debug {
            manifestPlaceholders = [app_label: "@string/app_name_debug"]
            applicationIdSuffix ".debug"
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        preview {
            manifestPlaceholders = [app_label: "@string/app_name_preview"]
            applicationIdSuffix ".preview"
            debuggable true // 保留debug信息
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.preview
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // rename the apk with the version name
    // add output file sub folder by build type


//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            output.outputFile = new File(
//                    output.outputFile.parent + "/${variant.buildType.name}",
////                    "app_${defaultConfig.applicationId }_"+ buildType.name + "_v${defaultConfig.versionName}-${releaseTime()}.apk"
//                    "ganchai-${variant.buildType.name}-${variant.versionName}-${variant.productFlavors[0].name}.apk".toLowerCase()
////                    output.outputFile.parent,"app_${defaultConfig.applicationId }_"+ buildType.name + "_v${defaultConfig.versionName}-${releaseTime()}.apk"
//            )
//        }
//        variant.outputs.all {
//            outputFileName = "unicorn_${variant.productFlavors[0].name}_v${variant.versionName}_${releaseTime()}.apk"
//        }
//    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    //    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {

    //        exclude group: 'com.android.support', module: 'support-annotations'

    //    })

    //    testCompile 'junit:junit:4.12'
    compile 'com.google.android:flexbox:0.2.7'

    // Obj - a simple Wavefront OBJ file loader

    // https://github.com/javagl/Obj

    // dependency for save-state

    //    classpath "io.github.prototypez:save-state:${latest_version}"
    implementation 'de.javagl:obj:0.2.1'
    compile 'com.google.firebase:firebase-core:11.0.4'
    implementation 'com.google.firebase:firebase-ads:11.0.4'
    implementation 'com.google.firebase:firebase-database:11.0.4'
    implementation 'com.google.guava:guava:24.1-android'

    //arcore
    implementation "com.google.ar.sceneform:core:1.0.0"
    implementation "com.google.ar.sceneform.ux:sceneform-ux:1.0.0"
    compile 'com.airbnb.android:lottie:2.5.4'

    //崩溃检测
    compile 'cat.ereza:customactivityoncrash:1.5.0'

    //CacheStrategy

    //    compile 'com.airbnb.android:lottie:1.0.1'

//    compile 'com.jakewharton:butterknife:8.8.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //    classpath"com.android.databinding:dataBinder:1.0-rc1"

    //    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    //    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.1.9'
    compile 'com.koushikdutta.async:androidasync:2.2.1'

    //    compile 'edu.tjrac.swant:yckjbaselib:1.0'

    ////    # required, enough for most devices.

    //            compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.1.2'

    //    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.1.2'

    //

    ////    # Other ABIs: optional

    //    compile 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.1.2'

    //    compile 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.1.2'

    //    compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.1.2'

    //    compile 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.1.2'

    //

    ////    # ExoPlayer as IMediaPlayer: optional, experimental

    //    compile 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.1.2'

    //    // ViewModel and LiveData

    //    implementation "android.arch.lifecycle:extensions:1.1.0"

    //    // alternatively, just ViewModel

    //    implementation "android.arch.lifecycle:viewmodel:1.1.0"

    //    // alternatively, just LiveData

    //    implementation "android.arch.lifecycle:livedata:1.1.0"

    //    annotationProcessor "android.arch.lifecycle:compiler:1.1.0"

    // Java8 support for Lifecycles

    //    implementation "android.arch.lifecycle:common-java8:1.1.0"

    // Room (use 1.1.0-alpha3 for latest alpha)

    //    implementation 'android.arch.persistence.room:runtime:1.0.0'

    //    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    // Guava support for Room

    //    implementation "android.arch.persistence.room:guava:1.1.0-alpha3"

    //    // Paging

    //    implementation "android.arch.paging:runtime:1.0.0-alpha6"

    //    // Test helpers for LiveData

    //    testImplementation "android.arch.core:core-testing:1.1.0"

    //

    //    // Test helpers for Room

    //    testImplementation "android.arch.persistence.room:testing:1.0.0"

    // Java8 support for Lifecycles

    //    implementation "android.arch.lifecycle:common-java8:1.1.0"

    // RxJava support for Room (use 1.1.0-alpha3 for latest alpha)

    //    implementation "android.arch.persistence.room:rxjava2:1.0.0"

    // ReactiveStreams support for LiveData

    //    implementation "android.arch.lifecycle:reactivestreams:1.1.0"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //    compile project(':yckjbaselib')
//    compile project(':yckjbaselib')
    compile project(':kbaselib')
    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'

//    compile 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
//    compile 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
//    compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
//    compile 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'
//
    compile 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.6.2'

}
repositories {
    mavenCentral()
}

//sceneform.asset('sampledata/models/Earth/Earth.gltf',
//        'default',
//        'sampledata/models/Earth/Earth.sfa',
//        'src/main/assets/Earth')
//
//sceneform.asset('sampledata/models/Jupiter/Jupiter.gltf',
//        'default',
//        'sampledata/models/Jupiter/Jupiter.sfa',
//        'src/main/assets/Jupiter')
//
//sceneform.asset('sampledata/models/Luna/Luna.gltf',
//        'default',
//        'sampledata/models/Luna/Luna.sfa',
//        'src/main/assets/Luna')
//
//sceneform.asset('sampledata/models/Mars/Mars.gltf',
//        'default',
//        'sampledata/models/Mars/Mars.sfa',
//        'src/main/assets/Mars')
//
//sceneform.asset('sampledata/models/Mercury/Mercury.gltf',
//        'default',
//        'sampledata/models/Mercury/Mercury.sfa',
//        'src/main/assets/Mercury')
//
//sceneform.asset('sampledata/models/Neptune/Neptune.gltf',
//        'default',
//        'sampledata/models/Neptune/Neptune.sfa',
//        'src/main/assets/Neptune')
//
//sceneform.asset('sampledata/models/Saturn/Saturn.gltf',
//        'default',
//        'sampledata/models/Saturn/Saturn.sfa',
//        'src/main/assets/Saturn')
//
//sceneform.asset('sampledata/models/Sol/Sol.gltf',
//        'default',
//        'sampledata/models/Sol/Sol.sfa',
//        'src/main/assets/Sol')
//
//
//sceneform.asset('sampledata/models/Uranus/Uranus.gltf',
//        'default',
//        'sampledata/models/Uranus/Uranus.sfa',
//        'src/main/assets/Uranus')
//
//sceneform.asset('sampledata/models/Venus/Venus.gltf',
//        'default',
//        'sampledata/models/Venus/Venus.sfa',
//        'src/main/assets/Venus')